<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<sect1 xml:id="language.operators.execution">
 <title>Execution Operators</title>
 <titleabbrev>Execution</titleabbrev>
 <para>
  PHP supports one execution operator: backticks (<literal>``</literal>). Note that
  these are not single-quotes! PHP will attempt to execute the
  contents of the backticks as a shell command; the output will be
  returned (i.e., it won't simply be dumped to output; it can be
  assigned to a variable).  Use of the backtick operator is identical
  to <function>shell_exec</function>.
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$output = `ls -al`;
echo "<pre>$output</pre>";
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <note>
  <para>
   The backtick operator is disabled when
   <function>shell_exec</function> is disabled.
  </para>
 </note>
 <note>
  <para>
   Unlike some other languages, backticks have no special meaning
   within double-quoted strings.
  </para>
 </note>

 <sect2 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="ref.exec">Program Execution functions</link></member>
    <member><function>popen</function></member>
    <member><function>proc_open</function></member>
    <member><link linkend="features.commandline">Using PHP from the commandline</link></member>
   </simplelist>
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
